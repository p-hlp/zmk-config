/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define L_DFLT_WIN 0
#define L_DFLT_MAC 1
#define L_SYM 2
#define L_SET 3

/ {
    behaviors {
        mo_mt0: mom_layer_mod_tap0 {
            compatible = "zmk,behavior-tap-dance";
            label = "MOMENTARY_LAYER_MOD_TAP0";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&mo L_SET>, <&to L_DFLT_MAC>;
        };

        mo_mt1: mom_layer_mod_tap1 {
            compatible = "zmk,behavior-tap-dance";
            label = "MOMENTARY_LAYER_MOD_TAP1";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&mo L_SET>, <&to L_DFLT_WIN>;
        };

        td_boot: tap_dance_bootloader {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_BOOTLOADER";
            #binding-cells = <0>;
            tapping-term-ms = <300>;
            bindings = <&none>, <&bootloader>;
        };

        RHAND_HRM: RHAND_HRM {
            compatible = "zmk,behavior-hold-tap";
            label = "RHAND_HRM";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <150>;
            quick-tap-ms = <175>;
            tapping-term-ms = <280>;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29>;
            hold-trigger-on-release;
        };

        LHAND_HRM: LHAND_HRM {
            compatible = "zmk,behavior-hold-tap";
            label = "LHAND_HRM";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35>;
            flavor = "balanced";
            hold-trigger-on-release;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&mt LALT TAB  &kp Q              &kp W                &kp E               &kp R              &kp T            &kp Y           &kp U              &kp I               &kp O                &kp P                           &kp MINUS
&kp LCTRL     &LHAND_HRM LALT A  &LHAND_HRM LSHIFT S  &LHAND_HRM LCTRL D  &LHAND_HRM LCMD F  &kp G            &kp H           &RHAND_HRM RCMD J  &RHAND_HRM RCTRL K  &RHAND_HRM RSHIFT L  &RHAND_HRM RIGHT_ALT SEMICOLON  &kp GRAVE
&kp ESC       &kp Z              &kp X                &kp C               &kp V              &kp B            &kp N           &kp M              &kp COMMA           &kp DOT              &kp FSLH                        &kp RSHFT
                                                      &mo_mt0             &lt L_SYM SPACE    &mt LCTRL DEL    &mt LSHFT BSPC  &lt L_SYM RET      &mo_mt0
            >;
        };

        mac_layer {
            bindings = <
&mt LALT TAB  &kp Q                  &kp W                &kp E               &kp R              &kp T           &kp Y           &kp U              &kp I               &kp O                &kp P                           &kp MINUS
&kp LCTRL     &LHAND_HRM LEFT_ALT A  &LHAND_HRM LSHIFT S  &LHAND_HRM LCTRL D  &LHAND_HRM LCMD F  &kp G           &kp H           &RHAND_HRM RCMD J  &RHAND_HRM RCTRL K  &RHAND_HRM RSHIFT L  &RHAND_HRM RIGHT_ALT SEMICOLON  &kp GRAVE
&kp ESC       &kp Z                  &kp X                &kp C               &kp V              &kp B           &kp N           &kp M              &kp COMMA           &kp DOT              &kp FSLH                        &kp RSHFT
                                                          &mo_mt1             &lt L_SYM SPACE    &mt LGUI DEL    &mt LSHFT BSPC  &lt L_SYM RET      &mo_mt1
            >;
        };

        symbol_layer {
            bindings = <
&trans  &kp SQT    &kp LT     &kp GT     &kp DQT    &kp COMMA    &kp AMPS   &kp SEMI    &kp LBKT  &kp RBKT  &kp PRCNT  &none
&trans  &kp EXCL   &kp MINUS  &kp PLUS   &kp EQUAL  &kp DOT      &kp PIPE   &kp COLON   &kp LPAR  &kp RPAR  &kp QMARK  &none
&trans  &kp CARET  &kp SLASH  &kp ASTRK  &kp BSLH   &kp HASH     &kp TILDE  &kp DOLLAR  &kp LBRC  &kp RBRC  &kp AT     &none
                              &trans     &trans     &trans       &trans     &trans      &trans
            >;
        };

        number_settings_layer {
            bindings = <
&none       &kp N6        &kp N7        &kp N8        &kp N9        &kp N0          &kp F1    &kp F2    &kp F3  &kp F4     &kp F5   &kp F6
&td_boot    &kp N1        &kp N2        &kp N3        &kp N4        &kp N5          &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &none    &td_boot
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp F7    &kp F8    &kp F9  &kp F10    &kp F11  &kp F12
                                        &trans        &trans        &trans          &trans    &trans    &trans
            >;
        };
    };
};

&nice_view_spi { cs-gpios = <&pro_micro 0 GPIO_ACTIVE_HIGH>; };
